// <auto-generated />
using System;
using HSBGHelper.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HSBGHelper.Server.Migrations
{
    [DbContext(typeof(HSBGDb))]
    partial class HSBGDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Composition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("mainMinionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("mainMinionId");

                    b.ToTable("Compositions");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Buddy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompositionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompositionId1")
                        .HasColumnType("int");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompositionId");

                    b.HasIndex("CompositionId1");

                    b.ToTable("Buddies");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("HeroId")
                        .HasColumnType("int");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TierHSReplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TierJeef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("buddyId")
                        .HasColumnType("int");

                    b.Property<int>("heroPowerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("buddyId");

                    b.HasIndex("heroPowerId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.HeroPower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeroPowers");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Minion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuddyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompositionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompositionId1")
                        .HasColumnType("int");

                    b.Property<int?>("HeroPowerId")
                        .HasColumnType("int");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuddyId");

                    b.HasIndex("CompositionId");

                    b.HasIndex("CompositionId1");

                    b.HasIndex("HeroPowerId");

                    b.HasIndex("MinionId");

                    b.ToTable("Minions");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuddyId")
                        .HasColumnType("int");

                    b.Property<int?>("HeroPowerId")
                        .HasColumnType("int");

                    b.Property<string>("HtmlGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpellId")
                        .HasColumnType("int");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuddyId");

                    b.HasIndex("HeroPowerId");

                    b.HasIndex("SpellId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("HeroMinion", b =>
                {
                    b.Property<int>("heroSynergiesId")
                        .HasColumnType("int");

                    b.Property<int>("minionSynergiesId")
                        .HasColumnType("int");

                    b.HasKey("heroSynergiesId", "minionSynergiesId");

                    b.HasIndex("minionSynergiesId");

                    b.ToTable("HeroMinion");
                });

            modelBuilder.Entity("HeroSpell", b =>
                {
                    b.Property<int>("heroSynergiesId")
                        .HasColumnType("int");

                    b.Property<int>("spellSynergiesId")
                        .HasColumnType("int");

                    b.HasKey("heroSynergiesId", "spellSynergiesId");

                    b.HasIndex("spellSynergiesId");

                    b.ToTable("HeroSpell");
                });

            modelBuilder.Entity("MinionSpell", b =>
                {
                    b.Property<int>("minionSynergiesId")
                        .HasColumnType("int");

                    b.Property<int>("spellSynergiesId")
                        .HasColumnType("int");

                    b.HasKey("minionSynergiesId", "spellSynergiesId");

                    b.HasIndex("spellSynergiesId");

                    b.ToTable("MinionSpell");
                });

            modelBuilder.Entity("Composition", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Minion", "mainMinion")
                        .WithMany()
                        .HasForeignKey("mainMinionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainMinion");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Buddy", b =>
                {
                    b.HasOne("Composition", null)
                        .WithMany("AddOnBuddies")
                        .HasForeignKey("CompositionId");

                    b.HasOne("Composition", null)
                        .WithMany("CommonEnablerBuddies")
                        .HasForeignKey("CompositionId1");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Hero", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Hero", null)
                        .WithMany("heroSynergies")
                        .HasForeignKey("HeroId");

                    b.HasOne("HSBGHelper.Server.Models.Buddy", "buddy")
                        .WithMany("heroSynergies")
                        .HasForeignKey("buddyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSBGHelper.Server.Models.HeroPower", "heroPower")
                        .WithMany("heroSynergies")
                        .HasForeignKey("heroPowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("buddy");

                    b.Navigation("heroPower");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Minion", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Buddy", null)
                        .WithMany("minionSynergies")
                        .HasForeignKey("BuddyId");

                    b.HasOne("Composition", null)
                        .WithMany("AddOnMinions")
                        .HasForeignKey("CompositionId");

                    b.HasOne("Composition", null)
                        .WithMany("CommonEnablerMinions")
                        .HasForeignKey("CompositionId1");

                    b.HasOne("HSBGHelper.Server.Models.HeroPower", null)
                        .WithMany("minionSynergies")
                        .HasForeignKey("HeroPowerId");

                    b.HasOne("HSBGHelper.Server.Models.Minion", null)
                        .WithMany("minionSynergies")
                        .HasForeignKey("MinionId");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Spell", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Buddy", null)
                        .WithMany("spellSynergies")
                        .HasForeignKey("BuddyId");

                    b.HasOne("HSBGHelper.Server.Models.HeroPower", null)
                        .WithMany("spellSynergies")
                        .HasForeignKey("HeroPowerId");

                    b.HasOne("HSBGHelper.Server.Models.Spell", null)
                        .WithMany("spellSynergies")
                        .HasForeignKey("SpellId");
                });

            modelBuilder.Entity("HeroMinion", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Hero", null)
                        .WithMany()
                        .HasForeignKey("heroSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSBGHelper.Server.Models.Minion", null)
                        .WithMany()
                        .HasForeignKey("minionSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeroSpell", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Hero", null)
                        .WithMany()
                        .HasForeignKey("heroSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSBGHelper.Server.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("spellSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinionSpell", b =>
                {
                    b.HasOne("HSBGHelper.Server.Models.Minion", null)
                        .WithMany()
                        .HasForeignKey("minionSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSBGHelper.Server.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("spellSynergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Composition", b =>
                {
                    b.Navigation("AddOnBuddies");

                    b.Navigation("AddOnMinions");

                    b.Navigation("CommonEnablerBuddies");

                    b.Navigation("CommonEnablerMinions");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Buddy", b =>
                {
                    b.Navigation("heroSynergies");

                    b.Navigation("minionSynergies");

                    b.Navigation("spellSynergies");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Hero", b =>
                {
                    b.Navigation("heroSynergies");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.HeroPower", b =>
                {
                    b.Navigation("heroSynergies");

                    b.Navigation("minionSynergies");

                    b.Navigation("spellSynergies");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Minion", b =>
                {
                    b.Navigation("minionSynergies");
                });

            modelBuilder.Entity("HSBGHelper.Server.Models.Spell", b =>
                {
                    b.Navigation("spellSynergies");
                });
#pragma warning restore 612, 618
        }
    }
}
